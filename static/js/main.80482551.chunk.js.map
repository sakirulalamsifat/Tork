{"version":3,"sources":["components/PostData.js","components/GetData.js","App.js","reportWebVitals.js","index.js"],"names":["PostData","data","to","Button","style","marginBottom","variant","Table","striped","bordered","hover","responsive","className","map","dat","id","title","meeting_id","user_name","meeting_password","starting_time","GetData","post","postData","JSON","stringify","csrf_token","Badge","textAlign","App","useState","setData","setPost","useEffect","postItems","a","axios","dataPost","console","log","get","getData","basename","process","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAoCeA,EAhCE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,gCACI,cAAC,IAAD,CAAMC,GAAI,OAAV,SAAkB,cAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,aAAa,QAASC,QAAQ,SAA9C,yBACpB,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACC,UAAU,mBAAnD,UACE,gCACE,+BACE,6BAAI,0CACJ,uCACA,4CACA,2CACA,kDACA,oDAGJ,gCACGX,EAAKY,KAAI,SAACC,GAAD,OACR,+BACE,6BAAKA,EAAIC,KACT,6BAAKD,EAAIE,QACT,6BAAKF,EAAIG,aACT,6BAAKH,EAAII,YACT,6BAAKJ,EAAIK,mBACT,6BAAKL,EAAIM,+B,QCXRC,EAZC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACVC,EAASC,KAAKC,UAAUH,EAAKI,YACjC,OAEI,gCACI,cAAC,IAAD,CAAMxB,GAAI,IAAV,SAAe,cAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,aAAa,QAASC,QAAQ,UAA9C,yBAAiF,uBAChG,cAACqB,EAAA,EAAD,CAAOvB,MAAO,CAACwB,UAAU,UAAWtB,QAAQ,SAA5C,SAAqD,6BAAKiB,UC+BvDM,MAnCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACN7B,EADM,KACA8B,EADA,OAEWD,mBAAS,IAFpB,mBAENR,EAFM,KAEAU,EAFA,KAuBb,OAnBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACOC,IAAMd,KAAN,wDADP,OACVe,EADU,OAIhBC,QAAQC,IAAIF,EAASpC,MACrB8B,EAAQM,EAASpC,MALD,2CAAH,sDAQF,uCAAG,4BAAAkC,EAAA,sEACQC,IAAMI,IAAN,4CADR,OACRC,EADQ,OAIdH,QAAQC,IAAIE,EAAQxC,MACpB+B,EAAQS,EAAQxC,MALF,2CAAH,qDAOboB,GACAa,MACC,IAED,qBAAKtB,UAAU,MAAf,SACE,cAAC,IAAD,CAAe8B,SAAUC,QAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,CAAU5C,KAAMA,KAAU6C,OAAK,IAChE,cAAC,IAAD,CAAOF,KAAK,OAAOC,UAAW,kBAAM,cAAC,EAAD,CAASvB,KAAMA,KAAUwB,OAAK,YCtB7DC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80482551.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Table, Button,  } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PostData = ({ data }) => {\r\n  return (\r\n    <div>\r\n        <Link to={'/get'}><Button style={{marginBottom:'20px'}} variant='danger'>See Token</Button></Link>\r\n      <Table striped bordered hover responsive className='table table-dark'>\r\n        <thead>\r\n          <tr>\r\n            <th><strong>id</strong></th>\r\n            <th>Title</th>\r\n            <th>Meeting ID</th>\r\n            <th>user Name</th>\r\n            <th>Meeting Password</th>\r\n            <th>Starting Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((dat) => (\r\n            <tr>\r\n              <td>{dat.id}</td>\r\n              <td>{dat.title}</td>\r\n              <td>{dat.meeting_id}</td>\r\n              <td>{dat.user_name}</td>\r\n              <td>{dat.meeting_password}</td>\r\n              <td>{dat.starting_time}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostData\r\n","import React from 'react'\r\nimport {Badge, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst GetData = ({post}) => {\r\n    var postData=JSON.stringify(post.csrf_token)\r\n    return (\r\n        \r\n        <div>\r\n            <Link to={'/'}><Button style={{marginBottom:'50px'}} variant='primary'>See Table</Button></Link><br/>\r\n            <Badge style={{textAlign:'center'}} variant=\"danger\"><h1>{postData}</h1></Badge>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetData\r\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport PostData from './components/PostData'\nimport GetData from './components/GetData'\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [post, setPost] = useState('')\n\n  useEffect(() => {\n    const postItems = async () => {\n      const dataPost = await axios.post(\n        `https://examplebd.com/api/live-classes?user_id=10089`\n      )\n      console.log(dataPost.data)\n      setData(dataPost.data)\n    }\n\n    const GetData = async () => {\n      const getData = await axios.get(\n        `https://examplebd.com/api/get-csrf-token`\n      )\n      console.log(getData.data)\n      setPost(getData.data)\n    }\n    GetData()\n    postItems()\n  }, [])\n  return (\n    <div className='App'>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path='/' component={() => <PostData data={data} />} exact />\n          <Route path='/get' component={() => <GetData post={post} />} exact />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './bootstrap.min.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}